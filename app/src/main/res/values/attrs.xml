<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
    </declare-styleable>


    <declare-styleable name="FloatingActionButton">
        <attr name="fab_colorPressed" format="color" />
        <attr name="fab_colorDisabled" format="color" />
        <attr name="fab_colorNormal" format="color" />
        <attr name="fab_icon" format="reference" />
        <attr name="fab_icon_size" format="reference">
            <enum name="normal" value="0" />
            <enum name="mini" value="1" />
        </attr>
        <attr name="fab_size" format="enum">
            <enum name="normal" value="0" />
            <enum name="mini" value="1" />
        </attr>
        <attr name="fab_title" format="string" />
        <attr name="fab_stroke_visible" format="boolean" />
        <attr name="fab_click_enable" format="boolean" />
    </declare-styleable>
    <declare-styleable name="AddFloatingActionButton">
        <attr name="fab_plusIconColor" format="color" />
    </declare-styleable>
    <declare-styleable name="FloatingActionsMenu">
        <attr name="fab_addButtonColorPressed" format="color" />
        <attr name="fab_addButtonColorNormal" format="color" />
        <attr name="fab_addButtonSize" format="enum">
            <enum name="normal" value="0" />
            <enum name="mini" value="1" />
        </attr>
        <attr name="fab_addButtonPlusIconColor" format="color" />
        <attr name="fab_addButtonStrokeVisible" format="boolean" />
        <attr name="fab_labelStyle" format="reference" />
        <attr name="fab_labelsPosition" format="enum">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <attr name="fab_expandDirection" format="enum">
            <enum name="up" value="0" />
            <enum name="down" value="1" />
            <enum name="left" value="2" />
            <enum name="right" value="3" />
        </attr>
    </declare-styleable>


    <declare-styleable name="Emojicon">
        <attr name="emojiconSize" format="dimension" />
        <attr name="emojiconAlignment" format="enum">
            <enum name="bottom" value="0" />
            <enum name="baseline" value="1" />
        </attr>
        <attr name="emojiconTextStart" format="integer" />
        <attr name="emojiconTextLength" format="integer" />
        <attr name="emojiconUseSystemDefault" format="boolean" />
    </declare-styleable>


    <declare-styleable name="CircularImageView">

        <!-- Specifies whether or not to draw a circular border around the image. -->
        <attr name="border" format="boolean" />
        <!-- Specifies the color of the border draw around the image. (if enabled) -->
        <attr name="border_color" format="color" />
        <!-- Makes the border this pixels wide. (if enabled) -->
        <attr name="border_width" format="dimension" />
        <!-- Specifies whether or not to draw a selector on this view upon touch events. -->
        <attr name="selector" format="boolean" />
        <!-- Specifies the color of the selector draw on top of the image upon touch events. (if enabled) -->
        <attr name="selector_color" format="color" />
        <!-- Specifies the color of the selector stroke drawn around the image upon touch events. Be sure to provide some opacity. (if enabled) -->
        <attr name="selector_stroke_color" format="color" />
        <!-- Makes the selector stroke drawn around the image upon touch events this pixels wide. (if enabled) -->
        <attr name="selector_stroke_width" format="dimension" />
        <!-- Specifies whether or not to draw a shadow around your circular image. -->
        <attr name="shadow" format="boolean" />
        <attr name="shadow_color" format="color" />
        <attr name="shadow_radius" format="float" />
    </declare-styleable>

    <declare-styleable name="CustomCircularImageViewTheme">
        <attr name="circularImageViewStyle" format="reference" />
    </declare-styleable>

    <declare-styleable name="ImageDownloaderView">
        <!-- The sibling to hide after the image is downloaded
        and show when the image is being downloaded -->
        <attr name="hideShowSibling" format="reference" />
        <attr name="numberProgressBarStyle" format="reference" />

    </declare-styleable>

    <declare-styleable name="NumberProgressBar">
        <attr name="progress_current" format="integer" />
        <attr name="progress_max" format="integer" />

        <attr name="progress_unreached_color" format="color" />
        <attr name="progress_reached_color" format="color" />

        <attr name="progress_reached_bar_height" format="dimension" />
        <attr name="progress_unreached_bar_height" format="dimension" />

        <attr name="progress_text_size" format="dimension" />
        <attr name="progress_text_color" format="color" />

        <attr name="progress_text_offset" format="dimension" />

        <attr name="progress_text_visibility" format="enum">
            <enum name="visible" value="0" />
            <enum name="invisible" value="1" />
        </attr>
    </declare-styleable>


    <declare-styleable name="CircleProgress">
        <attr name="circle_progress" format="integer" />
        <attr name="circle_max" format="integer" />

        <attr name="circle_unfinished_color" format="color" />
        <attr name="circle_finished_color" format="color" />

        <attr name="circle_text_size" format="dimension" />
        <attr name="circle_text_color" format="color" />

        <attr name="circle_prefix_text" format="string" />
        <attr name="circle_suffix_text" format="string" />
    </declare-styleable>

    <declare-styleable name="DonutProgress">
        <attr name="donut_progress" format="integer" />
        <attr name="donut_max" format="integer" />

        <attr name="donut_unfinished_color" format="color" />
        <attr name="donut_finished_color" format="color" />

        <attr name="donut_finished_stroke_width" format="dimension" />
        <attr name="donut_unfinished_stroke_width" format="dimension" />

        <attr name="donut_text_size" format="dimension" />
        <attr name="donut_text_color" format="color" />

        <attr name="donut_prefix_text" format="string" />
        <attr name="donut_suffix_text" format="string" />
        <attr name="donut_text" format="string" />

        <attr name="donut_background_color" format="color" />

        <attr name="donut_inner_bottom_text" format="string" />
        <attr name="donut_inner_bottom_text_size" format="dimension" />
        <attr name="donut_inner_bottom_text_color" format="color" />

        <attr name="donut_circle_starting_degree" format="integer" />
    </declare-styleable>

    <declare-styleable name="ArcProgress">
        <attr name="arc_progress" format="integer" />
        <attr name="arc_angle" format="float" />
        <attr name="arc_stroke_width" format="dimension" />
        <attr name="arc_max" format="integer" />

        <attr name="arc_unfinished_color" format="color" />
        <attr name="arc_finished_color" format="color" />

        <attr name="arc_text_size" format="dimension" />
        <attr name="arc_text_color" format="color" />

        <attr name="arc_suffix_text" format="string" />
        <attr name="arc_suffix_text_size" format="dimension" />
        <attr name="arc_suffix_text_padding" format="dimension" />

        <attr name="arc_bottom_text" format="string" />
        <attr name="arc_bottom_text_size" format="dimension" />
    </declare-styleable>

    <declare-styleable name="Themes">
        <attr name="circleProgressStyle" format="reference" />
        <attr name="donutProgressStyle" format="reference" />
        <attr name="arcProgressStyle" format="reference" />
    </declare-styleable>

    <declare-styleable name="CropImageView">
        <attr name="guidelines">
            <enum name="on" value="2" />
            <enum name="onTouch" value="1" />
            <enum name="off" value="0" />
        </attr>
        <attr name="fixAspectRatio" format="boolean" />
        <attr name="aspectRatioX" format="integer" />
        <attr name="aspectRatioY" format="integer" />
        <attr name="imageResource" format="reference" />
    </declare-styleable>

    <!-- Declare custom theme attributes that allow changing which styles are
         used for button bars depending on the API level.
         ?android:attr/buttonBarStyle is new as of API 11 so this is
         necessary to support previous API levels. -->
    <declare-styleable name="ButtonBarContainerTheme">
        <attr name="metaButtonBarStyle" format="reference" />
        <attr name="metaButtonBarButtonStyle" format="reference" />
    </declare-styleable>
    <declare-styleable name="CollapsingTitleLayout">
        <attr name="expandedMargin" format="reference|dimension" />
        <attr name="expandedMarginStart" format="reference|dimension" />
        <attr name="expandedMarginBottom" format="reference|dimension" />
        <attr name="expandedMarginEnd" format="reference|dimension" />
        <attr name="expandedTextSize" format="reference|dimension" />
        <attr name="collapsedTextSize" format="reference|dimension" />
        <attr name="android:textAppearance" />
        <attr name="textSizeInterpolator" format="reference" />
    </declare-styleable>

    <declare-styleable name="CollapsingTextAppearance">
        <attr name="android:textSize" />
        <attr name="android:textColor" />
    </declare-styleable>

    <declare-styleable name="RippleView">
        <attr name="rv_alpha" format="integer" />
        <attr name="rv_framerate" format="integer" />
        <attr name="rv_rippleDuration" format="integer" />
        <attr name="rv_zoomDuration" format="integer" />
        <attr name="rv_color" format="color" />
        <attr name="rv_centered" format="boolean" />
        <attr name="rv_type" format="enum">
            <enum name="simpleRipple" value="0" />
            <enum name="doubleRipple" value="1" />
            <enum name="rectangle" value="2" />
        </attr>
        <attr name="rv_ripplePadding" format="dimension" />
        <attr name="rv_zoom" format="boolean" />
        <attr name="rv_zoomScale" format="float" />

    </declare-styleable>
    <declare-styleable name="MyCoordinateLayout">
        <!-- A reference to an array of integers representing the
             locations of horizontal keylines in dp from the starting edge.
             Child views can refer to these keylines for alignment using
             layout_keyline="index" where index is a 0-based index into
             this array. -->
        <attr name="mkeylines" format="reference" />
        <!-- Drawable to display behind the status bar when the view is set to draw behind it. -->
        <attr name="mstatusBarBackground" format="reference" />
    </declare-styleable>
    <declare-styleable name="MyCoordinateLayout_LayoutParams">
        <attr name="android:layout_gravity" />
        <!-- The class name of a Behavior class defining special runtime behavior
             for this child view. -->
        <attr name="mlayout_behavior" format="string" />
        <!-- The id of an anchor view that this view should position relative to. -->
        <attr name="mlayout_anchor" format="reference" />
        <!-- The index of a keyline this view should position relative to.
             android:layout_gravity will affect how the view aligns to the
             specified keyline. -->
        <attr name="mlayout_keyline" format="integer" />

        <!-- Specifies how an object should position relative to an anchor, on both the X and Y axes,
             within its parent's bounds.  -->
        <attr name="mlayout_anchorGravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70" />
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07" />
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77" />
            <!-- Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80" />
            <!-- Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08" />
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>
    </declare-styleable>
    <declare-styleable name="GradientView">
        <attr name="pointerDrawable" format="reference" />
        <attr name="radius" format="dimension" />
        <attr name="lockPointerInBounds" format="boolean" />
    </declare-styleable>

    <declare-styleable name="MyImageView">
        <attr name="isPortrait" format="boolean" />
    </declare-styleable>
    <declare-styleable name="RoundedImageView">
        <attr name="riv_corner_radius" format="dimension" />
        <attr name="riv_corner_radius_top_left" format="dimension" />
        <attr name="riv_corner_radius_top_right" format="dimension" />
        <attr name="riv_corner_radius_bottom_left" format="dimension" />
        <attr name="riv_corner_radius_bottom_right" format="dimension" />
        <attr name="riv_border_width" format="dimension" />
        <attr name="riv_border_color" format="color" />
        <attr name="riv_mutate_background" format="boolean" />
        <attr name="riv_oval" format="boolean" />
        <attr name="android:scaleType" />
        <attr name="riv_tile_mode">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_x">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_y">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
    </declare-styleable>
</resources>